/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.15).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.AirwaybillPost;
import io.swagger.model.AirwaybillView;
import io.swagger.model.ErrorResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "airwaybills", description = "the airwaybills API")
public interface AirwaybillsApi {

    @ApiOperation(value = "Retrieve airwaybill for acceptance using airwaybill number.", nickname = "getAirwaybillGivenAirwaybillNumber", notes = "Get airwaybill given the airwaybill number.", response = AirwaybillView.class, tags={ "acceptance-service-api", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Airwaybill retrieved successfuly", response = AirwaybillView.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Report not found"),
        @ApiResponse(code = 406, message = "Unsupported format"),
        @ApiResponse(code = 500, message = "Report generation failed") })
    @RequestMapping(value = "/airwaybills/{airwaybillId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<AirwaybillView> getAirwaybillGivenAirwaybillNumber(@ApiParam(value = "expected reponse mime type" ,required=true) @RequestHeader(value="accept", required=true) String accept,@ApiParam(value = "Airwaybill number of the cargo for acceptance.",required=true) @PathVariable("airwaybillId") String airwaybillId);


    @ApiOperation(value = "Save acceptance.", nickname = "saveAcceptance", notes = "Save an acceptance.", authorizations = {
        @Authorization(value = "acceptance_auth", scopes = {
            @AuthorizationScope(scope = "read", description = "Grants read access"),
            @AuthorizationScope(scope = "write", description = "Grants write access")
            })
    }, tags={ "acceptance-service-api", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Airwaybill updated for acceptance"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Airwaybill for acceptance not found"),
        @ApiResponse(code = 422, message = "Airwaybill for acceptance failed validation", response = ErrorResponse.class) })
    @RequestMapping(value = "/airwaybills/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> saveAcceptance(@ApiParam(value = "Damage report object that needs to be added" ,required=true )  @Valid @RequestBody AirwaybillPost damage);

}
